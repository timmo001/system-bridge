---
name: Draft next prerelease after release

# yamllint disable-line rule:truthy
on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      base_tag:
        description: "Base tag to compute the next prerelease from (e.g. 5.0.0 or 5.0.0-beta.9)"
        required: false

env:
  STATIC_EXPORT: "true"

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'release' && format('release-{0}', github.event.release.tag_name) || format('run-{0}', github.run_id) }}
  cancel-in-progress: false

jobs:
  compute-next:
    name: Compute next prerelease tag
    runs-on: ubuntu-latest
    outputs:
      next_tag: ${{ steps.compute.outputs.next_tag }}
    steps:
      - name: Compute next prerelease tag
        id: compute
        shell: bash
        run: |
          set -euo pipefail
          PREV_TAG="${{ github.event_name == 'release' && github.event.release.tag_name || inputs.base_tag }}"
          if [[ -z "${PREV_TAG}" ]]; then
            echo "Base tag not provided and no release context available." >&2
            exit 1
          fi
          echo "Previous tag: ${PREV_TAG}"
          NEXT_TAG=""
          if [[ "${PREV_TAG}" =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)-beta\.([0-9]+)$ ]]; then
            MAJOR="${BASH_REMATCH[1]}"
            MINOR="${BASH_REMATCH[2]}"
            PATCH="${BASH_REMATCH[3]}"
            BETA="${BASH_REMATCH[4]}"
            NEXT_BETA=$((BETA+1))
            NEXT_TAG="${MAJOR}.${MINOR}.${PATCH}-beta.${NEXT_BETA}"
          elif [[ "${PREV_TAG}" =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            MAJOR="${BASH_REMATCH[1]}"
            MINOR="${BASH_REMATCH[2]}"
            PATCH="${BASH_REMATCH[3]}"
            NEXT_PATCH=$((PATCH+1))
            NEXT_TAG="${MAJOR}.${MINOR}.${NEXT_PATCH}-beta.1"
          else
            # Fallback: append -beta.1
            NEXT_TAG="${PREV_TAG}-beta.1"
          fi
          echo "Next prerelease tag: ${NEXT_TAG}"
          echo "next_tag=${NEXT_TAG}" >> "$GITHUB_OUTPUT"

  create-prerelease:
    name: Create draft prerelease
    runs-on: ubuntu-latest
    needs:
      - compute-next
    permissions:
      contents: write
    steps:
      - name: Create draft prerelease
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          prerelease: true
          name: ${{ needs.compute-next.outputs.next_tag }}
          tag_name: ${{ needs.compute-next.outputs.next_tag }}
          generate_release_notes: true
