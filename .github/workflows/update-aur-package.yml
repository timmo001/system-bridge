---
name: Update AUR Package

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - master
  workflow_dispatch: {}

# Only run one AUR update at a time to avoid conflicts
concurrency:
  group: aur-update
  cancel-in-progress: false

jobs:
  update-aur:
    name: Update AUR Package
    runs-on: ubuntu-latest
    # Only run if the build workflow passes
    needs: []
    if: github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install -y base-devel git

      - name: Setup AUR environment
        run: |
          # Install yay for AUR package management (needed for makepkg dependencies)
          sudo pacman-key --init || true
          sudo pacman-key --populate archlinux || true
          
          # Install base-devel and other required packages
          curl -O https://archive.archlinux.org/packages/p/pacman/pacman-6.0.2-7-x86_64.pkg.tar.zst
          sudo pacman -U --noconfirm pacman-6.0.2-7-x86_64.pkg.tar.zst || true

      - name: Setup Arch Linux environment in Docker
        run: |
          # We'll use Docker with Arch Linux to properly run makepkg
          docker pull archlinux:latest

      - name: Update AUR package
        env:
          AUR_SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          # Run the AUR update script in an Arch Linux container
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -e AUR_SSH_PRIVATE_KEY="$AUR_SSH_PRIVATE_KEY" \
            -e GITHUB_SHA="$GITHUB_SHA" \
            -e GITHUB_WORKSPACE="/workspace" \
            -w /workspace \
            archlinux:latest \
            bash -c "
              # Install required packages
              pacman -Syu --noconfirm
              pacman -S --noconfirm base-devel git openssh
              
              # Make script executable and run it
              chmod +x .scripts/linux/update-aur.sh
              ./.scripts/linux/update-aur.sh
            "

      - name: Report status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ AUR package updated successfully!"
            echo "Package: https://aur.archlinux.org/packages/system-bridge-git"
          else
            echo "❌ Failed to update AUR package"
            echo "Check the logs above for details"
          fi