---
name: "Package Application"

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  release:
    types:
      - published
  workflow_call:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  package-linux:
    name: üöÄ Linux - Package Application
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v4.1.2
        with:
          ref: ${{ github.head_ref }}
      - name: üèó Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.12"
          architecture: "x64"
          cache: "pip"
      - name: üèó Install dependencies
        run: |
          sudo apt update
          sudo apt install libavahi-compat-libdnssd-dev libegl-dev libpulse0
          wget https://github.com/goreleaser/nfpm/releases/download/v2.34.0/nfpm_2.34.0_amd64.deb
          sudo apt install ./nfpm_2.34.0_amd64.deb
          rm ./nfpm_2.34.0_amd64.deb
      - name: üèó Install setuptools, wheel, pyinstaller
        run: |
          pip install --upgrade setuptools wheel pyinstaller
      - name: üöÄ Run pre-package-command
        run: |
          pip install -r requirements_linux.txt
      - name: üì¶ Create executable
        run: >
          wget \
            -O systembridgebackend.py \
            https://raw.githubusercontent.com/timmo001/system-bridge-backend/master/systembridgebackend/__main__.py

          pyinstaller \
            --clean \
            --noconfirm \
            --onedir \
            --windowed \
            --icon "resources/system-bridge.png" \
            --name "systembridgebackend" \
            --collect-all "plyer" \
            --collect-all "systembridgeshared" \
            --collect-all "systembridgebackend" \
            --collect-all "systembridgefrontend" \
            systembridgebackend.py

          wget \
            -O systembridgecli.py \
            https://raw.githubusercontent.com/timmo001/system-bridge-cli/master/systembridgecli/__main__.py

          pyinstaller \
            --clean \
            --noconfirm \
            --onedir \
            --windowed \
            --icon "resources/system-bridge.png" \
            --name "systembridgecli" \
            --collect-all "systembridgeshared" \
            --collect-all "systembridgecli" \
            systembridgecli.py
      - name: ‚¨ÜÔ∏è Upload Artifacts - Executable
        uses: actions/upload-artifact@v4.3.1
        with:
          name: linux-executables
          path: dist
      - name: üöÄ Create apk file
        run: |
          nfpm package --config nfpm.yml --packager apk
      - name: ‚¨ÜÔ∏è Upload Artifacts - apk
        uses: actions/upload-artifact@v4.3.1
        with:
          name: linux-apk
          path: "*.apk"
      - name: üöÄ Create deb file
        run: |
          nfpm package --config nfpm.yml --packager deb
      - name: ‚¨ÜÔ∏è Upload Artifacts - deb
        uses: actions/upload-artifact@v4.3.1
        with:
          name: linux-deb
          path: "*.deb"
      - name: üöÄ Create rpm file
        run: |
          nfpm package --config nfpm.yml --packager rpm
      - name: ‚¨ÜÔ∏è Upload Artifacts - rpm
        uses: actions/upload-artifact@v4.3.1
        with:
          name: linux-rpm
          path: "*.rpm"
      - name: ‚¨ÜÔ∏è Upload to Release Assets - apk, deb, rpm
        if: ${{ github.event_name == 'release' }}
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.apk
            *.deb
            *.rpm
  package-windows:
    name: üöÄ Windows - Package Application
    runs-on: windows-latest
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v4.1.2
        with:
          ref: ${{ github.head_ref }}
      - name: üèó Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.12"
          architecture: "x64"
          cache: "pip"
      - name: üèó Install setuptools, wheel, pyinstaller
        run: |
          pip install --upgrade setuptools wheel pyinstaller
      - name: üöÄ Run pre-package-command
        run: |
          pip install -r requirements_windows.txt
      - name: üì¶ Create executable
        run: >
          Invoke-WebRequest `
            -Uri https://raw.githubusercontent.com/timmo001/system-bridge-backend/master/systembridgebackend/__main__.py `
            -OutFile systembridgebackend.py

          pyinstaller `
            --clean `
            --noconfirm `
            --onedir `
            --windowed `
            --icon "resources/system-bridge.ico" `
            --name "systembridgebackend" `
            --collect-all "plyer" `
            --collect-all "pywin32" `
            --collect-all "winsdk" `
            --collect-all "systembridgeshared" `
            --collect-all "systembridgebackend" `
            --collect-all "systembridgefrontend" `
            --collect-all "systembridgewindowssensors" `
            systembridgebackend.py

            Invoke-WebRequest `
              -Uri https://raw.githubusercontent.com/timmo001/system-bridge-cli/master/systembridgecli/__main__.py `
              -OutFile systembridgecli.py

            pyinstaller `
              --clean `
              --noconfirm `
              --onedir `
              --windowed `
              --icon "resources/system-bridge.ico" `
              --name "systembridgecli" `
              --collect-all "systembridgeshared" `
              --collect-all "systembridgecli" `
              systembridgecli.py
      - name: ‚¨ÜÔ∏è Upload Artifacts - Executable
        uses: actions/upload-artifact@v4.3.1
        with:
          name: windows-executables
          path: dist
      - name: üöÄ Create setup file
        uses: joncloud/makensis-action@v4.1
        with:
          script-file: installer.nsi
          # arguments: "/DPRODUCT_VERSION=${{ needs.get_version.outputs.version }}"
      - name: ‚¨ÜÔ∏è Upload Artifacts - Setup
        uses: actions/upload-artifact@v4.3.1
        with:
          name: windows-setup
          path: "*setup.exe"
      - name: ‚¨ÜÔ∏è Upload to Release Assets - Setup
        if: ${{ github.event_name == 'release' }}
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *setup.exe
