---
name: Deploy

# yamllint disable-line rule:truthy
on:
  release:
    types:
      - published
  workflow_run:
    workflows: ["CI"]
    branches: [master]
    types:
      - completed

jobs:
  deploy-release:
    name: üë∑ Deploy to Release
    runs-on: ${{ matrix.os.server }}
    strategy:
      matrix:
        os:
          - server: ubuntu-latest
            platform: win32
            arch: amd64
          - server: ubuntu-latest
            platform: win32
            arch: armv7
          - server: ubuntu-latest
            platform: win32
            arch: aarch64
          - server: ubuntu-latest
            platform: linux
            arch: amd64
          - server: ubuntu-latest
            platform: linux
            arch: armv7
          - server: ubuntu-latest
            platform: linux
            arch: aarch64
          - server: macos-latest
            platform: darwin
            arch: amd64
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v2.3.4
      - name: üèó Set up Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.x
      - name: ‚§µÔ∏è Get yarn cache path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: ‚§µÔ∏è Fetch Yarn cache
        uses: actions/cache@v2.1.4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: üèó Install linux dependencies
        if: matrix.os.server == 'ubuntu-latest' && matrix.os.arch == 'amd64' && matrix.os.arch == 'amd64'
        run: |
          sudo apt update
          sudo apt install libavahi-compat-libdnssd-dev
      - name: üèó Install linux wine dependencies
        if: matrix.os.server == 'ubuntu-latest' && matrix.os.platform == 'win32' && matrix.os.arch == 'amd64'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install wine64 wine32
      - name: üöÄ Install & Make - amd64
        if: matrix.os.arch == 'amd64'
        run: |
          yarn install:all
          yarn run publish --platform ${{ matrix.os.platform }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INLINE_RUNTIME_CHUNK: false
          NODE_ENV: production
      - name: üöÄ Install & Make multiarch - ${{ matrix.os.arch }}
        if: matrix.os.server == 'ubuntu-latest' && matrix.os.arch != 'amd64'
        uses: uraimo/run-on-arch-action@v2.0.9
        with:
          arch: ${{ matrix.os.arch }}
          distro: ubuntu20.04
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          install: |
            apt update -q -y
            apt install -q -y curl build-essential libavahi-compat-libdnssd-dev
            curl -fsSL https://deb.nodesource.com/setup_current.x | bash -
            apt install -q -y nodejs
            npm -g install yarn
          run: |
            yarn install:all
            yarn run publish --platform ${{ matrix.os.platform }}
          env: |
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            INLINE_RUNTIME_CHUNK: false
            NODE_ENV: production
