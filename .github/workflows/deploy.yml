---
name: Deploy

# yamllint disable-line rule:truthy
on:
  release:
    types:
      - published
  workflow_run:
    workflows: ["CI"]
    branches: [master]
    types:
      - completed

jobs:
  deploy-release:
    name: 👷 Deploy to Release
    runs-on: ${{ matrix.os.server }}
    strategy:
      matrix:
        os:
          - name: windows
            server: ubuntu-latest
            platform: win32
          - name: linux
            server: ubuntu-latest
            platform: linux
          - name: macos
            server: macos-latest
            platform: darwin
    if: |
      github.event_name == 'release'
      || (
        github.event_name == 'workflow_run'
        && github.event.workflow_run.conclusion == 'success'
      )
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v2.3.4
      - name: 🏗 Set up Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.x
      - name: ⤵️ Get yarn cache path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: ⤵️ Fetch Yarn cache
        uses: actions/cache@v2.1.4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: 🏗 Install linux dependencies
        if: matrix.os.server == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install libavahi-compat-libdnssd-dev
        env:
          CI: true
      - name: 🏗 Install linux wine dependencies
        if: matrix.os.server == 'ubuntu-latest' && matrix.os.platform == 'win32'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install wine64 wine32
        env:
          CI: true
      - name: 🏗 Install dependencies
        run: |
          yarn install:all
        env:
          CI: true
      - name: 🚀 Publish
        run: yarn run publish --platform ${{ matrix.os.platform }}
        env:
          CI: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INLINE_RUNTIME_CHUNK: false
          NODE_ENV: production
  bump-version:
    name: 👷 Bump version
    runs-on: ubuntu-latest
    needs:
      - deploy-release
    if: |
      github.event_name == 'release'
      || (
        github.event_name == 'workflow_run'
        && github.event.workflow_run.conclusion == 'success'
      )
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v2.3.4
      - name: 🏗 Set up Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.x
      - name: 👷 Bump version in package.json
        uses: tool3/bump@v1.2
        with:
          branch: "master"
          email: "contact@timmo.xyz"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          user: "Aidan Timson"
      - name: ↗ Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
