#!/bin/sh
# PKGBUILD for AUR -git (development) package
# This is used for the AUR system-bridge-git package

pkgname=system-bridge-git
pkgver=5.0.0+dev  # This will be replaced in the pkgver() function
pkgrel=1
pkgdesc="A bridge for your systems (git version)"
makedepends=('git' 'go' 'bun-bin')
source=("$pkgname::git+https://github.com/timmo001/system-bridge.git")
md5sums=('SKIP')
conflicts=('system-bridge')

arch=('x86_64')
url="https://github.com/timmo001/system-bridge"
license=('Apache-2.0')
keywords=('system-bridge' 'automation' 'home-assistant' 'api' 'websocket')
depends=('libx11' 'libxtst' 'libxkbcommon' 'libxkbcommon-x11')
provides=('system-bridge')

pkgver() {
  if [ -d "${srcdir}/${pkgname}/.git" ]; then
    cd "${srcdir}/${pkgname}"
  elif [ -d .git ]; then
    cd .
  else
    echo "0"
    return
  fi
  # Get the version from git describe
  local desc rest
  desc=$(git describe --long --tags --abbrev=7 2>/dev/null)
  if [ -n "$desc" ]; then
    rest=$(echo "$desc" | sed 's/^v//;s/^[0-9.]*//;s/-/./g; s/\([^-]*-g\)/r\1/')
    echo "5.0.0${rest}"
  else
    printf "5.0.0.r%s.%s" "$(git rev-list --count HEAD 2>/dev/null)" "$(git rev-parse --short=7 HEAD 2>/dev/null)"
  fi
}

build() {
  cd "$pkgname"
  export STATIC_EXPORT=true
  export CGO_ENABLED=1
  make build_client
  local version
  version="$(cd "$srcdir/$pkgname" && git describe --long --tags --abbrev=7 2>/dev/null | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g' || printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short=7 HEAD)")"
  go build -v -ldflags="-X 'github.com/timmo001/system-bridge/version.Version=${version}'" -o "system-bridge" .
}

package() {
  install -dm755 "$pkgdir/usr/bin"
  install -dm755 "$pkgdir/usr/share/applications"
  install -dm755 "$pkgdir/usr/share/licenses/$pkgname"
  install -dm755 "$pkgdir/usr/share/icons/hicolor/scalable/apps"
  install -dm755 "$pkgdir/usr/share/icons/hicolor/16x16/apps"
  install -dm755 "$pkgdir/usr/share/icons/hicolor/32x32/apps"
  install -dm755 "$pkgdir/usr/share/icons/hicolor/48x48/apps"
  install -dm755 "$pkgdir/usr/share/icons/hicolor/128x128/apps"
  install -dm755 "$pkgdir/usr/share/icons/hicolor/256x256/apps"
  install -dm755 "$pkgdir/usr/share/icons/hicolor/512x512/apps"
  cd "$srcdir/$pkgname"
  install -Dm755 system-bridge "$pkgdir/usr/bin/system-bridge"
  install -Dm644 .scripts/linux/system-bridge.desktop "$pkgdir/usr/share/applications/system-bridge.desktop"
  install -Dm644 .resources/system-bridge-dimmed.svg "$pkgdir/usr/share/icons/hicolor/scalable/apps/system-bridge.svg"
  install -Dm644 .resources/system-bridge-dimmed-16.png "$pkgdir/usr/share/icons/hicolor/16x16/apps/system-bridge.png"
  install -Dm644 .resources/system-bridge-dimmed-32.png "$pkgdir/usr/share/icons/hicolor/32x32/apps/system-bridge.png"
  install -Dm644 .resources/system-bridge-dimmed-48.png "$pkgdir/usr/share/icons/hicolor/48x48/apps/system-bridge.png"
  install -Dm644 .resources/system-bridge-dimmed-128.png "$pkgdir/usr/share/icons/hicolor/128x128/apps/system-bridge.png"
  install -Dm644 .resources/system-bridge-dimmed-256.png "$pkgdir/usr/share/icons/hicolor/256x256/apps/system-bridge.png"
  install -Dm644 .resources/system-bridge-dimmed-512.png "$pkgdir/usr/share/icons/hicolor/512x512/apps/system-bridge.png"
  install -Dm644 LICENSE "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}
