!include "MUI2.nsh"

Name "System Bridge"
OutFile "dist\system-bridge-$VERSION-setup.exe"
InstallDir "$PROGRAMFILES64\System Bridge"

!define MUI_ICON ".resources\system-bridge-circle.ico"
!define MUI_UNICON ".resources\system-bridge-circle.ico"
!define DOT_NET_VERSION "8.0"

!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES
!insertmacro MUI_PAGE_FINISH

!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES

!insertmacro MUI_LANGUAGE "English"

Section "Prerequisites"
  # Check for .NET Runtime
  nsExec::ExecToStack 'dotnet --list-runtimes'
  Pop $0
  Pop $1
  ${If} $1 == ""
  ${OrIf} $1 == "0"
    MessageBox MB_YESNO|MB_ICONQUESTION "This application requires .NET ${DOT_NET_VERSION} Runtime. Would you like to install it now?" IDYES install_dotnet IDNO abort_installation
    abort_installation:
      Abort "Installation cancelled: .NET Runtime is required."
    install_dotnet:
      ExecWait 'winget install Microsoft.DotNet.Runtime.8'
      ${If} $0 != 0
        MessageBox MB_OK|MB_ICONSTOP "Failed to install .NET Runtime. Please install it manually from https://dotnet.microsoft.com/download/dotnet/${DOT_NET_VERSION}"
        Abort "Installation failed: Could not install .NET Runtime."
      ${EndIf}
  ${EndIf}

  # Check for Visual C++ Runtime
  IfFileExists "$SYSDIR\vcruntime140.dll" vc_runtime_ok
    MessageBox MB_YESNO|MB_ICONQUESTION "This application requires Visual C++ Runtime. Would you like to install it now?" IDYES install_vc IDNO abort_vc
    abort_vc:
      Abort "Installation cancelled: Visual C++ Runtime is required."
    install_vc:
      ExecWait 'winget install Microsoft.VCRedist.2015+.x64'
      ${If} $0 != 0
        MessageBox MB_OK|MB_ICONSTOP "Failed to install Visual C++ Runtime. Please install it manually from https://aka.ms/vs/17/release/vc_redist.x64.exe"
        Abort "Installation failed: Could not install Visual C++ Runtime."
      ${EndIf}
  vc_runtime_ok:
SectionEnd

Section "Install"
  SetOutPath "$INSTDIR"
  File "dist\system-bridge.exe"

  # Create sensors directory structure and copy all sensor files
  CreateDirectory "$INSTDIR\lib\sensors\windows\bin"
  SetOutPath "$INSTDIR\lib\sensors\windows\bin"
  File /r "lib\sensors\windows\bin\*.*"

  WriteUninstaller "$INSTDIR\uninstall.exe"

  CreateDirectory "$SMPROGRAMS\System Bridge"
  CreateShortcut "$SMPROGRAMS\System Bridge\System Bridge Backend.lnk" "$INSTDIR\system-bridge.exe" "backend --notify" "$INSTDIR\system-bridge.exe" 7
  CreateShortcut "$SMPROGRAMS\System Bridge\Uninstall.lnk" "$INSTDIR\uninstall.exe" "" "$INSTDIR\uninstall.exe" 0
SectionEnd

Section "Uninstall"
  Delete "$INSTDIR\system-bridge.exe"
  Delete "$INSTDIR\lib\sensors\windows\bin\SystemBridgeWindowsSensors.exe"
  Delete "$INSTDIR\uninstall.exe"

  RMDir "$INSTDIR\lib\sensors\windows\bin"
  RMDir "$INSTDIR\lib\sensors\windows"
  RMDir "$INSTDIR\lib\sensors"
  RMDir "$INSTDIR\lib"
  RMDir "$INSTDIR"

  Delete "$SMPROGRAMS\System Bridge\System Bridge Backend.lnk"
  Delete "$SMPROGRAMS\System Bridge\Uninstall.lnk"
  RMDir "$SMPROGRAMS\System Bridge"
SectionEnd
