!include "MUI2.nsh"
!include "TextFunc.nsh"
!include "StrFunc.nsh"
${StrStrAdv}

Name "System Bridge"
OutFile "dist\system-bridge-$VERSION-setup.exe"
InstallDir "$PROGRAMFILES64\System Bridge"

!define MUI_ICON ".resources\system-bridge-dimmed.ico"
!define MUI_UNICON ".resources\system-bridge-dimmed.ico"
!define DOT_NET_VERSION "8.0"

VIProductVersion "$DOT_VERSION"
VIAddVersionKey "ProductName" "System Bridge"
VIAddVersionKey "FileDescription" "System Bridge - A bridge for your systems"
VIAddVersionKey "CompanyName" "System Bridge"
VIAddVersionKey "LegalCopyright" "Copyright (C) $YEAR Aidan Timson"
VIAddVersionKey "OriginalFilename" "system-bridge-setup.exe"
VIAddVersionKey "InternalName" "system-bridge-setup.exe"
VIAddVersionKey "ProductVersion" "$VERSION"
VIAddVersionKey "FileVersion" "$VERSION"

!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES
!insertmacro MUI_PAGE_FINISH

!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES

!insertmacro MUI_LANGUAGE "English"

Section "Prerequisites"
  # Check for .NET 8.0 Runtime specifically
  DetailPrint "Checking for .NET 8.0 Runtime..."
  nsExec::ExecToStack 'dotnet --list-runtimes'
  Pop $0
  Pop $1

  # Check if .NET 8.0 is installed
  StrCpy $R0 "0"  # Flag to indicate if .NET 8.0 is found
  ${If} $0 == "0"
    # Parse the output to find .NET 8.0
    ${StrStrAdv} $2 $1 "Microsoft.NETCore.App 8." ">" "<" "0" "0" "0"
    ${If} $2 != ""
      StrCpy $R0 "1"  # .NET 8.0 found
      DetailPrint ".NET 8.0 Runtime found"
    ${EndIf}
  ${EndIf}

  ${If} $R0 == "0"
    DetailPrint ".NET 8.0 Runtime not found"
    MessageBox MB_YESNO|MB_ICONQUESTION "This application requires .NET 8.0 Runtime. Would you like to install it now?" IDYES install_dotnet IDNO abort_installation

    abort_installation:
      Abort "Installation cancelled: .NET 8.0 Runtime is required."

    install_dotnet:
      DetailPrint "Installing .NET 8.0 Runtime..."

      # Try winget first (most reliable)
      nsExec::ExecToStack 'winget --version'
      Pop $3
      ${If} $3 == "0"
        DetailPrint "Using winget to install .NET 8.0..."
        ExecWait 'winget install Microsoft.DotNet.Runtime.8 --accept-source-agreements --accept-package-agreements' $4
        ${If} $4 == "0"
          DetailPrint ".NET 8.0 installed successfully via winget"
          Goto dotnet_install_success
        ${Else}
          DetailPrint "winget installation failed, trying direct download..."
        ${EndIf}
      ${Else}
        DetailPrint "winget not available, trying direct download..."
      ${EndIf}

      # Fallback: Download and install .NET 8.0 directly using PowerShell
      DetailPrint "Downloading .NET 8.0 Runtime installer..."
      nsExec::ExecToStack 'powershell -Command "try { Invoke-WebRequest -Uri \"https://aka.ms/dotnet/8.0/dotnet-runtime-win-x64.exe\" -OutFile \"$$env:TEMP\dotnet-runtime-8.0.0-win-x64.exe\"; Write-Host \"success\" } catch { Write-Host \"failed\" }"'
      Pop $5
      Pop $6
      ${If} $5 == "0"
        ${If} $6 == "success"
          DetailPrint "Installing .NET 8.0 Runtime..."
          ExecWait '"$TEMP\dotnet-runtime-8.0.0-win-x64.exe" /install /quiet /norestart' $7
          ${If} $7 == "0"
            DetailPrint ".NET 8.0 installed successfully"
            Delete "$TEMP\dotnet-runtime-8.0.0-win-x64.exe"
            Goto dotnet_install_success
          ${Else}
            Delete "$TEMP\dotnet-runtime-8.0.0-win-x64.exe"
            Goto dotnet_install_failed
          ${EndIf}
        ${Else}
          DetailPrint "Failed to download .NET 8.0 Runtime installer"
          Goto dotnet_install_failed
        ${EndIf}
      ${Else}
        DetailPrint "PowerShell download failed"
        Goto dotnet_install_failed
      ${EndIf}

      dotnet_install_failed:
        MessageBox MB_OK|MB_ICONSTOP "Failed to install .NET 8.0 Runtime automatically.$\n$\nPlease install it manually from:$\nhttps://dotnet.microsoft.com/download/dotnet/8.0$\n$\nChoose the '.NET Runtime 8.0.x' installer for your system."
        Abort "Installation failed: Could not install .NET 8.0 Runtime."

      dotnet_install_success:
        # Verify installation
        nsExec::ExecToStack 'dotnet --list-runtimes'
        Pop $7
        Pop $8
        ${StrStrAdv} $9 $8 "Microsoft.NETCore.App 8." ">" "<" "0" "0" "0"
        ${If} $9 == ""
          MessageBox MB_OK|MB_ICONSTOP "Failed to verify .NET 8.0 Runtime installation. Please restart your computer and try installing System Bridge again."
          Abort "Installation failed: Could not verify .NET 8.0 Runtime installation."
        ${EndIf}
  ${EndIf}

  # Check for Visual C++ Runtime
  IfFileExists "$SYSDIR\vcruntime140*.dll" vc_runtime_ok
    MessageBox MB_YESNO|MB_ICONQUESTION "This application requires Visual C++ Runtime. Would you like to install it now?" IDYES install_vc IDNO abort_vc
    abort_vc:
      Abort "Installation cancelled: Visual C++ Runtime is required."
    install_vc:
      ExecWait 'winget install Microsoft.VCRedist.2015+.x64' $8
      ${If} $8 != 0
        MessageBox MB_OK|MB_ICONSTOP "Failed to install Visual C++ Runtime. Please install it manually from https://aka.ms/vs/17/release/vc_redist.x64.exe"
        Abort "Installation failed: Could not install Visual C++ Runtime."
      ${EndIf}
    Goto vc_runtime_end
  vc_runtime_ok:
    ; Visual C++ Runtime found, continue
  vc_runtime_end:
SectionEnd

Section "Install"
  SetOutPath "$INSTDIR"
  File "dist\system-bridge.exe"
  File /oname=system-bridge.ico ".resources\system-bridge-dimmed.ico"
  
  ; Include NowPlaying helper if available at build time
  !ifdef INCLUDE_NOW_PLAYING
    SetOutPath "$INSTDIR\now-playing"
    File ".\\.scripts\\windows\\now-playing\\*.*"
  !endif

  # Register uninstaller in Windows registry
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\System Bridge" "DisplayName" "System Bridge"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\System Bridge" "UninstallString" "$INSTDIR\uninstall.exe"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\System Bridge" "DisplayIcon" "$INSTDIR\system-bridge.ico"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\System Bridge" "DisplayVersion" "$VERSION"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\System Bridge" "Publisher" "System Bridge"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\System Bridge" "InstallLocation" "$INSTDIR"

  WriteUninstaller "$INSTDIR\uninstall.exe"

  CreateDirectory "$SMPROGRAMS\System Bridge"
  CreateShortcut /NoWorkingDir "$SMPROGRAMS\System Bridge\System Bridge.lnk" "$INSTDIR\system-bridge.exe" "backend --open-web-client" "$INSTDIR\system-bridge.ico" 0 SW_SHOWMINIMIZED "" "System Bridge"
SectionEnd

Section "Uninstall"
  Delete "$INSTDIR\system-bridge.exe"
  Delete "$INSTDIR\system-bridge.ico"
  Delete "$INSTDIR\uninstall.exe"

  RMDir "$INSTDIR"

  Delete "$SMPROGRAMS\System Bridge\System Bridge.lnk"
  RMDir "$SMPROGRAMS\System Bridge"

  ; Remove uninstaller registry keys
  DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\System Bridge"
SectionEnd
